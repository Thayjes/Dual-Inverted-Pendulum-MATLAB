#Linear Time Invariant Control of Dual Inverted Pendulum

function [x,X]=LTIControl(T,Q,R,xprime)
global xbar1
x=[0.0287;
    0.0902;
    0.1014;
   -0.1435;
   -3.2873;
   -3.3858];
x=x+xprime;
%     8.2281;
%    16.7585;
%    33.8882];
%xdash=xbar(1:6);

h=0.01;
N=T/h;
t=0:0.01:T;
X=zeros(6,N+1);[~,K]=RHSb(x,Q,R);udash=zeros(N+1,1);

for i=1:N+1
    udash(i)=-K*x;
    xprime(:,i)=x-xbar1(1:6,301);
    X(:,i)=x;
    [f1,~]=RHSb(x,Q,R);
    [f2,~]=RHSb(x+h*f1/2,Q,R);
    [f3,~]=RHSb(x+h*f2/2,Q,R);
    [f4,~]=RHSb(x+h*f3,Q,R);
    x= x + h*( f1/6 + (f2 + f3)/3 + f4/6 );
    
    %xdash(7:9)=f1(4:6);
end

function [f,K]=RHSb(xdash,Q,R) %Perturbation Equation which Governs the error xdash(t) of the actual state from the nominal state.
%The equation is given by Edxdash(t)/dt = Axdash(t)+Bu(t)
B=[0;0;0;1;0;0];
global xbar1 %This is the nominal state which was obtained from optimizing the trajectory
% %xbar=[0.0287;
%     0.0902;
%     0.1014;
%    -0.1435;
%    -3.2873;
%    -3.3858;
%     8.2281;
%    16.7585;
%    33.8882];
A=Compute_A(xbar1(:,301));
E=Compute_E(xbar1(:,301));
[~,~,K]=care(A,B,Q,R,zeros(6,1),E);
f=E\(A*xdash(1:6) -B*(K*xdash(1:6)));
end

function A=Compute_A(x,s); g=9.8;
s.m1=0.2; s.L1=1;    s.ell1=s.L1/2; s.I1=s.m1*s.ell1^2/12; % system, & derived parameters
s.m2=0.1; s.L2=0.5;  s.ell2=s.L2/2; s.I2=s.m2*s.ell2^2/12; alpha=0.1;s.mc=10;
s.B=[0; 0; 0; 1; 0; 0]; s.Q=diag([0 0 0 0 0 0]); s.R=0; s.QT=diag([5 40 10 .1 60 10]);
a42=s.m1*s.ell1*(x(8)*sin(x(2))+x(5)^2*cos(x(2))); a45=2*s.m1*s.ell1*x(5)*sin(x(2));
a43=s.m2*s.ell2*(x(9)*sin(x(3))+x(6)^2*cos(x(3))); a46=2*s.m2*s.ell2*x(6)*sin(x(3));
a52=s.m1*s.ell1*(g*cos(x(2))-x(7)*sin(x(2))); a63=s.m2*s.ell2*(g*cos(x(3))-x(7)*sin(x(3)));
A=[zeros(3) eye(3); 0 -a42 -a43 0 -a45 -a46; 0 a52 0 0 0 0; 0 0 a63 0 0 0];
end

function E=Compute_E(x,s); I=eye(3); Z=zeros(3);
s.m1=0.2; s.L1=1;    s.ell1=s.L1/2; s.I1=s.m1*s.ell1^2/12; % system, & derived parameters
s.m2=0.1; s.L2=0.5;  s.ell2=s.L2/2; s.I2=s.m2*s.ell2^2/12; alpha=0.1;s.mc=10;
s.B=[0; 0; 0; 1; 0; 0]; s.Q=diag([0 0 0 0 0 0]); s.R=0; s.QT=diag([5 40 10 .1 60 10]);
E=[I Z; Z [s.mc+s.m1+s.m2         -s.m1*s.ell1*cos(x(2)) -s.m2*s.ell2*cos(x(3));
           -s.m1*s.ell1*cos(x(2))  s.I1+s.m1*s.ell1^2             0            ;
           -s.m2*s.ell2*cos(x(3))          0              s.I2+s.m2*s.ell2^2   ]];
end 


#Plotting the Results
figure(1);
subplot(2,1,1)
plot(t,X(1,:),'r',t,xbar1(1,301),'k-');
title('Actual State vs Optimal State')
legend('Actual State','Optimal State')
ylabel('Position of cart')
xlabel('time')
subplot(2,1,2)
plot(t,xprime(1,:));
title('Error between Actual state and optimal state')
ylabel('Position of cart')
xlabel('time')
figure(2);
subplot(2,1,1)
plot(t,X(2,:),'b',t,xbar1(2,301),'k-');
title('Actual State vs Optimal State')
legend('Actual State','Optimal State')
ylabel('Angle 1')
xlabel('time')
subplot(2,1,2)
plot(t,xprime(2,:));
title('Error between Actual state and optimal state')
ylabel('Angle 1')
xlabel('time')
figure(3);
subplot(2,1,1)
plot(t,X(3,:),'g',t,xbar1(3,301),'k-');
title('Actual State vs Optimal State')
legend('Actual State','Optimal State')
ylabel('Angle 2')
xlabel('time')
subplot(2,1,2)
plot(t,xprime(3,:));
title('Error between Actual state and optimal state')
ylabel('Angle 2')
xlabel('time')
figure(4)
plot(t',udash);
xlabel('Time')
ylabel('Feedback uprime')

end

    
